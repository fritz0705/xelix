The Xelix virtual file system currently is based on a mountpoint list
instead of a node graph, which is usually faster, but also way more
complicated to implement.

When a specific path is being requested, Xelix splits that into it's
parts and looks up every chunck top-down. This means, if you'll for
example pass it /home/lutoma/Code/xelix/src/init/main.c, it will look
up:

/home/lutoma/Code/xelix/src/init/
/home/lutoma/Code/xelix/src/
/home/lutoma/Code/xelix/
/home/lutoma/Code/

etc., until it find's an active mount point. Needless to say that this
can, especially for long paths, take unneccessarily long, but for now,
that's fine.

TODO
=====

* Reimplement as a node graph
* Accordance to POSIX
